# -*- coding: utf-8 -*-
"""Reto 10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ThP8T2OnzRTYxjBCYLwQtGrfbN8FyFRe

#Suma
"""

def generar_matriz1(filas, columnas):
    matriz = []
    for i in range(filas):
        matriz.append([])
        for j in range(columnas):
            datos = float(input('fila ' + str(i+1) + ', columna ' + str(j+1) + ': '))
            matriz[i].append(datos)
    return matriz

def generar_matriz2(filas2, columnas2):
    matriz = []
    for i in range(filas2):
        matriz.append([])
        for j in range(columnas2):
            datos = float(input('fila ' + str(i+1) + ', columna ' + str(j+1) + ': '))
            matriz[i].append(datos)
    return matriz

def suma_matrix(m_a, m_b):
    if len(m_a) == len(m_b) and len(m_a[0]) == len(m_b[0]):
        m_c = []
        for i in range(len(m_a)):
            m_c.append([])
            for j in range(len(m_a[0])):
                m_c[i].append(m_a[i][j] + m_b[i][j])
        return m_c
    else:
        return None

def imprimir_matriz(matriz):
    for fila in matriz:
        fila_ = '['
        for elemento in fila:
            fila_ += str(elemento) + ' '
        fila_ += ']'
        print(fila_)

if __name__=='__main__':
    filas = int(input('Ingrese el número de filas de la 1era matriz: '))
    columnas = int(input('Ingrese el número de columnas de la 1era matriz: '))

    filas2 = int(input('Ingrese el número de filas de la 2da matriz: '))
    columnas2 = int(input('Ingrese el número de columnas de la 2da matriz: '))

    if filas != filas2 or columnas != columnas2:
        print('No es posible realizar la suma')
    else:
        matriz1 = generar_matriz1(filas, columnas)
        matriz2 = generar_matriz2(filas2, columnas2)
        resultado = suma_matrix(matriz1, matriz2)
        if resultado is not None:
            print('La suma de las matrices es:')
            imprimir_matriz(resultado)
        else:
            print('No es posible realizar la suma')

"""#Producto"""

def generar_matriz1(filas, columnas):
    matriz = []
    for i in range(filas):
        matriz.append([])
        for j in range(columnas):
            datos = float(input('fila ' + str(i+1) + ', columna ' + str(j+1) + ': '))
            matriz[i].append(datos)
    return matriz

def generar_matriz2(filas2, columnas2):
    matriz = []
    for i in range(filas2):
        matriz.append([])
        for j in range(columnas2):
            datos = float(input('fila ' + str(i+1) + ', columna ' + str(j+1) + ': '))
            matriz[i].append(datos)
    return matriz


def multi(m1, m2):
    if len(m1[0]) == len(m2):
        m3 = []
        for i in range(len(m1)):
            m3.append([])
            for j in range(len(m2[0])):
                m3[i].append(0)

        for i in range(len(m1)):
            for j in range(len(m2[0])):
                for _ in range(len(m1[0])):
                    m3[i][j] += m1[i][_] * m2[_][j]

        return m3
    else:
        return None

def imprimir_matriz(matriz):
    for fila in matriz:
        fila_ = '['
        for elemento in fila:
            fila_ += str(elemento) + ' '
        fila_ += ']'
        print(fila_)

if __name__ == '__main__':
    filas = int(input('Ingrese el número de filas de la 1era matriz: '))
    columnas = int(input('Ingrese el número de columnas de la 1era matriz: '))

    filas2 = int(input('Ingrese el número de filas de la 2da matriz: '))
    columnas2 = int(input('Ingrese el número de columnas de la 2da matriz: '))

    if columnas != filas2:
        print('No es posible realizar la operación')
    else:
        matriz1 = generar_matriz1(filas, columnas)
        matriz2 = generar_matriz2(filas2, columnas2)
        resultado = multi(matriz1, matriz2)

        if resultado is not None:
            print('La multiplicación de las matrices es:')
            imprimir_matriz(resultado)
        else:
            print('No es posible realizar la operación')

"""#Transpuesta"""

def generar_matriz1(filas, columnas):
    matriz = []
    for i in range(filas):
        matriz.append([])
        for j in range(columnas):
            datos = float(input('Fila ' + str(i+1) + ', columna ' + str(j+1) + ': '))
            matriz[i].append(datos)
    return matriz

def trasponer_matriz(matriz):
    traspuesta = []
    for i in range(len(matriz[0])):
        traspuesta.append([])
        for j in range(len(matriz)):
            traspuesta[i].append(matriz[j][i])
    return traspuesta

def mostrar_matriz(matriz):
    for fila in matriz:
        print(fila)

if __name__ == "__main__":
    filas = int(input('Ingrese el número de filas de la matriz: '))
    columnas = int(input('Ingrese el número de columnas de la matriz: '))

    matriz = generar_matriz1(filas, columnas)
    print("\nMatriz original:")
    mostrar_matriz(matriz)

    matriz_traspuesta = trasponer_matriz(matriz)
    print("\nMatriz traspuesta:")
    mostrar_matriz(matriz_traspuesta)

"""#Suma de elementos de una columna"""

def generar_matriz(filas, columnas):
    matriz = []
    for i in range(filas):
        matriz.append([])
        for j in range(columnas):
            datos = float(input('Fila ' + str(i+1) + ', columna ' + str(j+1) + ': '))
            matriz[i].append(datos)
    return matriz

def sumar_columna(matriz, columna):
    suma = 0
    for fila in matriz:
        suma += fila[columna]
    return suma

def mostrar_matriz(matriz):
    for fila in matriz:
        print(fila)

if __name__ == "__main__":
    filas = int(input('Ingrese el número de filas de la matriz: '))
    columnas = int(input('Ingrese el número de columnas de la matriz: '))

    matriz = generar_matriz(filas, columnas)
    print("\nMatriz generada:")
    mostrar_matriz(matriz)

    columna = int(input('\nIngrese la columna que quiera sumar (empezando desde 0): '))
    suma = sumar_columna(matriz, columna)
    print(f"La suma de la columna {columna} es: {suma}")

"""#Suma de filas"""

def generar_matriz(filas, columnas):
    matriz = []
    for i in range(filas):
        matriz.append([])
        for j in range(columnas):
            datos = float(input('Fila ' + str(i+1) + ', columna ' + str(j+1) + ': '))
            matriz[i].append(datos)
    return matriz

def sumar_fila(matriz, fila):
    suma = 0
    for elemento in matriz[fila]:
        suma += elemento
    return suma

def mostrar_matriz(matriz):
    for fila in matriz:
        print(fila)

def main():
    filas = int(input('Ingrese el número de filas de la matriz: '))
    columnas = int(input('Ingrese el número de columnas de la matriz: '))

    matriz = generar_matriz(filas, columnas)
    print("\nMatriz generada:")
    mostrar_matriz(matriz)

    fila = int(input('\nIngrese el número de la fila a sumar (empezando desde 0): '))
    suma = sumar_fila(matriz, fila)
    print(f"\nLa suma de los elementos de la fila {fila} es: {suma}")

if __name__ == "__main__":
    main()